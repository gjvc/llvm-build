#! /bin/bash

# -----------------------------------------------------------------------------

set -eu -o pipefail
readonly _DIRNAME=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && realpath . )
readonly _BASENAME=$( basename ${BASH_SOURCE[0]} )
readonly _ROOT=$( dirname ${_DIRNAME} )


# -----------------------------------------------------------------------------

project_name=llvm-project
project_version=9.0.1

source ${_ROOT}/etc/bootstrap/defaults
HOST_GCC=/opt/gcc-9.2.0/


#    -D CMAKE_SKIP_INSTALL_RPATH=ON \
#    -D LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld" \
#    -D LLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi" \
#    -D LLVM_TOOLCHAIN_TOOLS=ON \
#    -D CMAKE_CXX_LINK_FLAGS="-L${HOST_GCC}/lib64 -Wl,-rpath,${HOST_GCC}/lib64" \
#    -D LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld" \
#    -D LLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi" \
#    -D CMAKE_INSTALL_PREFIX=${stage2_target_dir} \



# -----------------------------------------------------------------------------

stage_name=${_BASENAME}

src_root=${_ROOT}/src/${project_name}/${project_version}/
obj_root=${_ROOT}/obj/${project_name}/${project_version}/${stage_name}/

target_dir=${obj_root}/target/
build_dir=${obj_root}/build/


# -----------------------------------------------------------------------------

${cmake3_binary} \
    -B ${build_dir} \
    -C ${src_root}/clang/cmake/caches/3-stage.cmake \
    -G Ninja \
    -S ${src_root}/llvm \
    -Wno-dev \
    \
    -D CLANG_ENABLE_BOOTSTRAP=ON \
    -D CMAKE_BUILD_TYPE=Release \
    -D CMAKE_CXX_COMPILER=${HOST_GCC}/bin/g++ \
    -D CMAKE_CXX_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_CXX_LINK_FLAGS="-static-libstdc++" \
    -D CMAKE_C_COMPILER=${HOST_GCC}/bin/gcc \
    -D CMAKE_C_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_INSTALL_PREFIX=${target_dir} \
    -D LLVM_TARGETS_TO_BUILD=Native \
    \
    |& ts "%Y-%m-%d.%H%M.%.S  ${_BASENAME}  cmake "

${ninja_build_binary} -C ${build_dir} -t targets \
    |& ts "%Y-%m-%d.%H%M.%.S  ${_BASENAME}  targets "

