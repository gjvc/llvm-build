#! /bin/bash

# -----------------------------------------------------------------------------

set -eu -o pipefail
readonly _DIRNAME=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && realpath . )
readonly _BASENAME=$( basename ${BASH_SOURCE[0]} )
readonly _ROOT=$( dirname ${_DIRNAME} )


# -----------------------------------------------------------------------------

cmake3_binary=$(which cmake3)
ninja_build_binary=$(which ninja-build)

project_name=llvm-project
project_version=9.0.1

source ${_ROOT}/etc/bootstrap/defaults
HOST_GCC=/opt/gcc-9.2.0/


# -----------------------------------------------------------------------------

src_root=${_ROOT}/src/${project_name}/${project_version}/
obj_root=${_ROOT}/obj/${project_name}/${project_version}/

    
# -----------------------------------------------------------------------------
    
stage1_build_dir=${obj_root}/stage1/build/
stage1_target_dir=${obj_root}/stage1/target/
stage2_build_dir=${obj_root}/stage2/build/
stage2_target_dir=${obj_root}/stage2/target/
stage3_build_dir=${obj_root}/stage3/build/
stage3_target_dir=${obj_root}/stage3/target/
stage4_build_dir=${obj_root}/stage4/build/
stage4_target_dir=${obj_root}/stage4/target/


# -----------------------------------------------------------------------------

${cmake3_binary} \
    -B ${stage1_build_dir} \
    -G Ninja \
    -S ${src_root}/llvm \
    -Wno-dev \
    \
    -D CMAKE_BUILD_TYPE=Release \
    -D CMAKE_C_COMPILER=${HOST_GCC}/bin/gcc \
    -D CMAKE_C_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_CXX_COMPILER=${HOST_GCC}/bin/g++ \
    -D CMAKE_CXX_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_INSTALL_PREFIX=${stage2_target_dir} \
    -D CMAKE_SKIP_INSTALL_RPATH=ON \
    -D LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld" \
    -D LLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi" \
    -D LLVM_TOOLCHAIN_TOOLS=ON \
    -D CMAKE_CXX_LINK_FLAGS="-L${HOST_GCC}/lib64 -Wl,-rpath,${HOST_GCC}/lib64" \
    \
    -D LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld" \
    -D LLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi" \
    -D LLVM_LIBDIR_SUFFIX=64 \
    -D LLVM_TARGETS_TO_BUILD=X86 \
    \
    |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  cmake "

${ninja_build_binary} -C ${stage1_build_dir} |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  build "
${ninja_build_binary} -C ${stage1_build_dir} install |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  install "


# -----------------------------------------------------------------------------

${cmake3_binary} \
    -B ${stage2_build_dir} \
    -G Ninja \
    -S ${src_root}/llvm \
    -Wno-dev \
    \
    -D CMAKE_BUILD_TYPE=Release \
    -D CMAKE_CXX_COMPILER=${stage1_target_dir}/bin/clang++ \
    -D CMAKE_CXX_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_C_COMPILER=${stage1_target_dir}/bin/clang \
    -D CMAKE_C_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_INSTALL_PREFIX=${stage2_target_dir} \
    \
    -D LLVM_BUILD_INSTRUMENTED=ON \
    -D LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld" \
    -D LLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi" \
    -D LLVM_LIBDIR_SUFFIX=64 \
    -D LLVM_TARGETS_TO_BUILD=X86 \
    -D LLVM_USE_LINKER=lld \
    \
    |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  cmake "

${ninja_build_binary} -C ${stage2_build_dir} |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  build "
${ninja_build_binary} -C ${stage2_build_dir} install |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  install "


# -----------------------------------------------------------------------------

${cmake3_binary} \
    -B ${stage3_build_dir} \
    -G Ninja \
    -S ${src_root}/llvm \
    -Wno-dev \
    \
    -D CMAKE_BUILD_TYPE=Release \
    -D CMAKE_CXX_COMPILER=${stage2_target_dir}/bin/clang++ \
    -D CMAKE_CXX_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_C_COMPILER=${stage2_target_dir}/bin/clang \
    -D CMAKE_C_COMPILER_LAUNCHER=${ccache_binary} \
    -D CMAKE_INSTALL_PREFIX=$(stage3_target_dir) \
    -D CMAKE_SKIP_INSTALL_RPATH=ON \
    -D CMAKE_CXX_LINK_FLAGS="-L${HOST_GCC}/lib64 -Wl,-rpath,${HOST_GCC}/lib64" \
    \
    -D LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld" \
    -D LLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi" \
    -D LLVM_LIBDIR_SUFFIX=64 \
    -D LLVM_TARGETS_TO_BUILD=X86 \
    \
    |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  cmake "

${ninja_build_binary} -C ${stage3_build_dir} \
    |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  build "
${ninja_build_binary} -C ${stage3_build_dir} install \
    |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  install "


# -----------------------------------------------------------------------------

${stage1_target_dir}/bin/llvm-profdata merge -output=clang.profdata ${stage2_dir}/bin/stage2-prof-gen/profiles/*

${cmake3_binary} \
    -B ${stage4_build_dir} \
    -G Ninja \
    -S ${src_root}/llvm \
    -Wno-dev \
    \
    -D CMAKE_INSTALL_PREFIX=${stage4_target_dir} \
    -D LLVM_ENABLE_LTO=Full \
    -D LLVM_PROFDATA_FILE=${stage2_target_dir}/profiles/clang.profdata \
    -D LLVM_TARGETS_TO_BUILD=X86 \
    -D LLVM_USE_LINKER=lld \
    \
    |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  cmake "

${ninja_build_binary} -C ${stage4_target_dir} |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  build "
${ninja_build_binary} -C ${stage4_target_dir} install |& ts "%Y-%m-%d.%H%M.%.S  ${stage_name}  install "

