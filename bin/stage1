#! /bin/bash

# -----------------------------------------------------------------------------

set -eu -o pipefail
readonly _BASENAME=$( basename ${BASH_SOURCE[0]} )
readonly _DIRNAME=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && realpath . )
readonly _ROOT=$( dirname ${_DIRNAME} )


# defaults --------------------------------------------------------------------

source ${_ROOT}/etc/defaults 
source ${_ROOT}/etc/settings 


# git -------------------------------------------------------------------------

[[ ! -d ${src_path} ]] && ${_DIRNAME}/git-write-worktrees


# prepare ---------------------------------------------------------------------

[[ -d ${stage1_build_dir} ]] && rm -rf ${stage1_build_dir}
[[ -d ${stage1_target_dir} ]] && rm -rf ${stage1_target_dir}

export LD_LIBRARY_PATH=${gcc_root}/lib64
${cmake3_binary} \
    -LA \
    --debug-trycompile \
    -D CCACHE_BINARY=${ccache_binary} \
    -D GCC_DUMPMACHINE=${gcc_dumpmachine} \
    -D GCC_ROOT=${gcc_root} \
    -D GCC_VERSION=${gcc_version} \
    -D SRC_PATH=${src_path} \
    -D STAGE1_BUILD_DIR=${stage1_build_dir} \
    -D STAGE1_TARGET_DIR=${stage1_target_dir} \
    -G Ninja \
    -S ${src_path}/llvm \
    -B ${stage1_build_dir} \
    -C ${stage1_cmake_file} \
    -Wno-dev \
    |& stdbuf -i0 -o0 -e0 nl -s '  ' -w4 -nrz -ba \
    |& ts 'stage1.cmake.generate ' \
    |& ts '%Y-%m-%d.%H%M.%.S '


# build -----------------------------------------------------------------------

ccache --zero-stats 1>/dev/null 2>&1

${ninja_build_binary} \
    -C ${stage1_build_dir} \
    \
    |& stdbuf -i0 -o0 -e0 nl -s '  ' -w4 -nrz -ba \
    |& ts 'stage1.ninja.build ' \
    |& ts '%Y-%m-%d.%H%M.%.S '


# install ---------------------------------------------------------------------

${ninja_build_binary} \
    -C ${stage1_build_dir} \
    install \
    |& stdbuf -i0 -o0 -e0 nl -s '  ' -w4 -nrz -ba \
    |& ts 'stage1.ninja.install ' \
    |& ts '%Y-%m-%d.%H%M.%.S '

